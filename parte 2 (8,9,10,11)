PARTE 2 (EJERCICIOS 8,9,10,11)
#pragma once
#define N 10
#define M 10
class Serie
{
private :
	int V[100],n;
public:
	Serie(void);
	void Nueve ();
	void odi();
	void mostrar(int mat[N][M], int n, int m);
	void cargarSerie4 (int mat[N][M], int n, int m);
	int  sumaDig(int n);
	void cargarSerie3(int mat[N][M], int n, int m);

	~Serie(void);
};


#include "StdAfx.h"
#include "Serie.h"
#include <iostream>
 using namespace std ;
#define N 10
#define M 10


Serie::Serie(void)
{
}
Serie::~Serie(void)
{
}

void Serie::Nueve()
{ cout<<"ingrese limite de la serie ";
  cin>>n;
  int cont=1,d,D,u ;
  for (int i=0;i<n;i++)
     { if (cont<4) { V[i]=cont*cont;cont++;}
	 else { d=cont*cont;
	        D=d/10;
			u=d%10;
			V[i]=(u*10)+D; cont++;
	      }
     }
  for (int i=0;i<n;i++)
   {cout<<V[i]<<"  ";
   }
}

void Serie::odi()
{
    for(int a=3; a<=36; a=a+3)
       {
          V[a]=a;
          cout<<V[a]<<" ";
       }
}

int Serie::sumaDig(int n)
{ int d,s=0;
  while(n>0)
  { d=n%10; 
    n=n/10;
	s=s+d;
  }
return(s);
}

void Serie::cargarSerie3(int mat[N][M] ,int n, int m)
{ int i,j,d=1,Num=0;
  for(i=0;i<n;i++)
  { for(j=0;j<m;j++)
      { Num=Num+d;
        d =sumaDig(Num);
		mat[i][j]=Num;
      }
  }
}


void Serie::cargarSerie4(int mat[N][M], int n, int m)
{  int i,j,d=1,Num=0;
   for(i=0;i<n;i++){
       for(j=0;j<m;j++){
           Num=Num+d;
       d=sumaDig(Num);
       mat[i][j]=d;
       }
   }
}

void Serie::mostrar(int mat[N][M], int n, int m){

 int i,j;
 for(i=0;i<n;i++)
   { for(j=0;j<m;j++)
	   { cout<<mat[i][j]<<" ";
       }cout<<endl;
   }
}





// P3 Parte2.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "conio.h"
#include<iostream>
#include "Serie.h"
 using namespace std;

void main()
{ int opc ;
  int nrow,ncol, mat3[10][10],mat4[10][10];
    do{
        cout<<"ingrese num fil: ";
        cin>>nrow;
    }while(nrow<0||nrow>10);

    do{
        cout<<"ingrese num col: ";
        cin>>ncol;
    }while(ncol<0||ncol>10);
  Serie m3;
  Serie m4;
 do{
  cout<<"     MENU     "<<endl;
  cout<<" 1.-  Serie multiplos de 3 "<<endl;
  cout<<" 2.-  Serie numeros elevados "<<endl;
  cout<<" 3.-  Serie 3 "<<endl;
  cout<<" 4.-  Serie 4 "<<endl;
  cout<<" 0.- Salir "<<endl;
  cout<<"ingrese opcion : ";cin>>opc;

  Serie S1,S2 ;

  switch(opc)
  { case 1 :
           { S1.odi();
			   break;
		   }
    case 2 :
		{   S2.Nueve();
			   break;
	       }
    case 3 :
	       {    m3.cargarSerie3(mat3, nrow, ncol);
                m3.mostrar(mat3, nrow, ncol);
				break;
	       }
    case 4 :
	       {     m4.cargarSerie4(mat4, nrow, ncol);
                 m4.mostrar(mat4, nrow, ncol);
			   break;
	       }
  }
 }while (opc != 0);
  getch ();
}
